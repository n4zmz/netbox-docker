name: push

on:
  push:
    branches-ignore:
      - release
  pull_request:
    branches-ignore:
      - release

jobs:
  build_arch:
    runs-on: utuntu-latest
    name: Build the new Netbox Docker Images
    strategy:
      matrix:
        build_cmd:
        - ./build-latest.sh
        - PRERELEASE=true ./build-latest.sh
        - ./build-next.sh
        - ./build.sh develop
        docker_from:
        - '' # use the default of the build script
        - python:3.7-alpine
        - python:3.8-alpine
        - python:3.9-alpine
        include:
          - arch: aarch64
            distro: alpine_latest
    steps:
      - uses: actions/checkout@v2
      - uses: uraimo/run-on-arch-action@v2.0.5
        id: get-checkout
        name: Checkout
        uses: actions/checkout@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
       id: docker-build
       name: Build the image with '${{ matrix.build_cmd }}' on arch '{{ matrix.arch}}'
       run: ${{ matrix.build_cmd }}
       env:
         GH_ACTION: enable
       with:
         arch: ${{ matrix.arch }}
         distro: ${{ matrix.distro }}
       id: docker-test
       name: Test the image
       run: IMAGE="${FINAL_DOCKER_TAG}" ./test.sh
       if: steps.docker-build.outputs.skipped != 'true'
       with:
         arch: ${{ matrix.arch }}
         distro: ${{ matrix.distro }}
      id: registry-login
      name: Login to the Docker Registry
      run: |
        echo "::add-mask::$DOCKERHUB_USERNAME"
        echo "::add-mask::$DOCKERHUB_PASSWORD"
        docker login -u "$DOCKERHUB_USERNAME" --password "${DOCKERHUB_PASSWORD}" "${DOCKER_REGISTRY}"
     env:
       DOCKERHUB_USERNAME: ${{ secrets.dockerhub_username }}
       DOCKERHUB_PASSWORD: ${{ secrets.dockerhub_password }}
     if: steps.docker-build.outputs.skipped != 'true'
     with:
       arch: ${{ matrix.arch }}
       distro: ${{ matrix.distro }}
     id: registry-push
     name: Push the image
     run: ${{ matrix.build_cmd }} --push-only
     if: steps.docker-build.outputs.skipped != 'true'
     with:
       arch: ${{ matrix.arch }}
       distro: ${{ matrix.distro }}
     id: registry-logout
     name: Logout of the Docker Registry
     run: docker logout "${DOCKER_REGISTRY}"
     if: steps.docker-build.outputs.skipped != 'true'
     with:
       arch: ${{ matrix.arch }}
       distro: ${{ matrix.distro }}
  build:
    strategy:
      matrix:
        build_cmd:
        - ./build-latest.sh
        - PRERELEASE=true ./build-latest.sh
        - ./build-next.sh
        - ./build.sh develop
        docker_from:
        - '' # use the default of the build script
        - python:3.7-alpine
        - python:3.8-alpine
        - python:3.9-alpine
      fail-fast: false
    runs-on: ubuntu-latest
    name: Builds new Netbox Docker Images
    steps:
    - id: git-checkout
      name: Checkout
      uses: actions/checkout@v1
    - id: docker-build
      name: Build the image from '${{ matrix.docker_from }}' with '${{ matrix.build_cmd }}'
      run: ${{ matrix.build_cmd }}
      env:
        DOCKER_FROM: ${{ matrix.docker_from }}
        GH_ACTION: enable
    - id: docker-test
      name: Test the image
      run: IMAGE="${FINAL_DOCKER_TAG}" ./test.sh
      if: steps.docker-build.outputs.skipped != 'true'
